{
    "swagger": "2.0",
    "info": {
        "title": "Logs Audit API documentation",
        "contact": {},
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/events": {
            "get": {
                "description": "get documents",
                "tags": [
                    "db"
                ],
                "summary": "Brings documents according to the criteria",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "timestamp",
                        "name": "timestamp",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the name of the service that sends the event",
                        "name": "service",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the type of the event",
                        "name": "eventType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "extra data to search in the event body",
                        "name": "data",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "metadata given from the service when stores the events",
                        "name": "tags",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "json"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "json"
                        }
                    }
                }
            }
        }
    }
}